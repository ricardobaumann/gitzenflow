#!/bin/bash
verify() {
	git show-ref --verify --quiet refs/heads/develop

	if [ $? -eq 1 ] ; then
		echo "Branch Develop will be created"
		git checkout -B develop
	else
		echo "Branch Develop already exists"
	fi	

	git config credential.helper cache && git config credential.helper 'cache --timeout=30000000'
}


start() {
	if [ -z "$1" ]
	  then
	    echo "The issue branch name must be informed. Use zf-issue start <issue>"
	    exit 1
	fi
	verify
	git fetch && git checkout develop
	git checkout -B $1
}

push() {
	if [ -z "$1" ] || [ -z "$2" ] ; then
	    echo "The issue branch name and the commit message must be informed. Use zf-issue push <issue> <text>"
	    exit 1
	fi
	git add -A .
	
	message=$(echo "$@")
    
    #echo "$message"
	git commit -m "$message"
	git push origin $1
}

switch() {
	if [ -z "$1" ]
	  then
	    echo "The branch name must be informed. Use zf-issue switch <branch>"
	    exit 1
	fi
	git fetch && git checkout $1
}

merge() {
	if [ -z "$1" ] || [ -z "$2" ] ; then
	    echo "The branch names to merge must be informed. Use zf-issue merge <origin_branch> <target_branch>"
	    exit 1
	fi
	git checkout $2
	git merge $1
	git push origin $2
	git fetch && git checkout $1
}

release() {
	if [ -z "$1" ] || [ -z "$2" ] ; then
	    echo "The tag name and description be informed. Use zf-issue release <tag_name> <tag_description>"
	    exit 1
	fi
	git fetch && git checkout develop
	git checkout master
	git merge develop
	git push origin master
	message=$(echo "$@")
	git tag -a $1 -m "$message"
	git push --tags
	git fetch && git checkout develop
}

pull() {
	if [ -z "$1" ]
	  then
	    echo "The issue branch name must be informed. Use zf-issue pull <issue>"
	    exit 1
	fi
	git pull origin $2
}

$@


